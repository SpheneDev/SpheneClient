name: Build SpheneClient (NuGet API)

# Alternative workflow that uses SpheneAPI as NuGet package instead of ProjectReference
# To use this workflow:
# 1. Rename this file to build.yml (and rename the current build.yml to build-projectref.yml)
# 2. Update Sphene.csproj to use PackageReference instead of ProjectReference
# 3. Ensure SpheneAPI is published as NuGet package

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    # Add private NuGet source if SpheneAPI is hosted privately
    - name: Add NuGet source
      run: |
        # Example for GitHub Packages (adjust URL and credentials as needed)
        # dotnet nuget add source https://nuget.pkg.github.com/SpheneDev/index.json --name github --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }}
        
        # Example for Azure DevOps Artifacts
        # dotnet nuget add source https://pkgs.dev.azure.com/yourorg/_packaging/yourfeed/nuget/v3/index.json --name azure --username az --password ${{ secrets.AZURE_DEVOPS_PAT }}
        
        # For public NuGet.org, no additional source needed
        Write-Host "Using default NuGet sources"
      shell: powershell
      
    - name: Download and install Dalamud
      run: |
        Invoke-WebRequest -Uri "https://goatcorp.github.io/dalamud-distrib/stg/latest.zip" -OutFile latest.zip
        Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"
        
    - name: Restore dependencies
      run: dotnet restore Sphene.Actions.sln
      working-directory: ./
      
    - name: Build Debug
      run: dotnet build Sphene.Actions.sln --configuration Debug --no-restore
      working-directory: ./
      
    - name: Build Release
      run: dotnet build Sphene.Actions.sln --configuration Release --no-restore
      working-directory: ./
      
    - name: Upload Debug Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sphene-debug-nuget
        path: |
          Sphene/bin/Debug/
          !Sphene/bin/Debug/**/*.pdb
        retention-days: 30
        
    - name: Upload Release Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sphene-release-nuget
        path: |
          Sphene/bin/Release/
          !Sphene/bin/Release/**/*.pdb
        retention-days: 90
        
    - name: Check for compilation errors
      run: |
        $errors = dotnet build Sphene.Actions.sln --configuration Release --verbosity quiet 2>&1 | Select-String "error CS"
        if ($errors) {
          Write-Host "Compilation errors found:"
          $errors | ForEach-Object { Write-Host $_ }
          exit 1
        } else {
          Write-Host "No compilation errors found."
        }
      working-directory: ./
      shell: powershell